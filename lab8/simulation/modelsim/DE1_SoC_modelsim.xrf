vendor_name = ModelSim
source_file = 1, U:/ee271labs/lab8/DE1_SoC.sv
source_file = 1, U:/ee271labs/lab8/DE1_SoC_golden_top.sdc
source_file = 1, U:/ee271labs/lab8/mux2_1.sv
source_file = 1, U:/ee271labs/lab8/simple.sv
source_file = 1, U:/ee271labs/lab8/clock_divider.sv
source_file = 1, SeaTacLights.sv
source_file = 1, U:/ee271labs/lab8/centerLight.sv
source_file = 1, U:/ee271labs/lab8/normalLight.sv
source_file = 1, userInput.sv
source_file = 1, victory.sv
source_file = 1, twoFF.sv
source_file = 1, counter.sv
source_file = 1, U:/ee271labs/lab8/LFSR.sv
source_file = 1, U:/ee271labs/lab8/comparator.sv
source_file = 1, U:/ee271labs/lab8/compButton.sv
source_file = 1, playGame.sv
source_file = 1, ledMatrixDriver.sv
source_file = 1, ledDisplay.sv
source_file = 1, changeOneColor.sv
source_file = 1, gameRule.sv
source_file = 1, U:/ee271labs/lab8/LEDDriver.sv
source_file = 1, U:/ee271labs/lab8/LED_test.sv
source_file = 1, U:/ee271labs/lab8/displayWin.sv
source_file = 1, flop.sv
source_file = 1, U:/ee271labs/lab8/inputProcess.sv
source_file = 1, U:/ee271labs/lab8/key.sv
source_file = 1, U:/ee271labs/lab8/winning.sv
source_file = 1, U:/ee271labs/lab8/two_ff.sv
source_file = 1, U:/ee271labs/lab8/inputHolder.sv
source_file = 1, U:/ee271labs/lab8/db/DE1_SoC.cbx.xml
design_name = DE1_SoC
instance = comp, \GPIO_1[0]~output , GPIO_1[0]~output, DE1_SoC, 1
instance = comp, \GPIO_1[1]~output , GPIO_1[1]~output, DE1_SoC, 1
instance = comp, \GPIO_1[2]~output , GPIO_1[2]~output, DE1_SoC, 1
instance = comp, \GPIO_1[3]~output , GPIO_1[3]~output, DE1_SoC, 1
instance = comp, \GPIO_1[4]~output , GPIO_1[4]~output, DE1_SoC, 1
instance = comp, \GPIO_1[5]~output , GPIO_1[5]~output, DE1_SoC, 1
instance = comp, \GPIO_1[6]~output , GPIO_1[6]~output, DE1_SoC, 1
instance = comp, \GPIO_1[7]~output , GPIO_1[7]~output, DE1_SoC, 1
instance = comp, \GPIO_1[8]~output , GPIO_1[8]~output, DE1_SoC, 1
instance = comp, \GPIO_1[9]~output , GPIO_1[9]~output, DE1_SoC, 1
instance = comp, \GPIO_1[10]~output , GPIO_1[10]~output, DE1_SoC, 1
instance = comp, \GPIO_1[11]~output , GPIO_1[11]~output, DE1_SoC, 1
instance = comp, \GPIO_1[12]~output , GPIO_1[12]~output, DE1_SoC, 1
instance = comp, \GPIO_1[13]~output , GPIO_1[13]~output, DE1_SoC, 1
instance = comp, \GPIO_1[14]~output , GPIO_1[14]~output, DE1_SoC, 1
instance = comp, \GPIO_1[15]~output , GPIO_1[15]~output, DE1_SoC, 1
instance = comp, \GPIO_1[16]~output , GPIO_1[16]~output, DE1_SoC, 1
instance = comp, \GPIO_1[17]~output , GPIO_1[17]~output, DE1_SoC, 1
instance = comp, \GPIO_1[18]~output , GPIO_1[18]~output, DE1_SoC, 1
instance = comp, \GPIO_1[19]~output , GPIO_1[19]~output, DE1_SoC, 1
instance = comp, \GPIO_1[20]~output , GPIO_1[20]~output, DE1_SoC, 1
instance = comp, \GPIO_1[21]~output , GPIO_1[21]~output, DE1_SoC, 1
instance = comp, \GPIO_1[22]~output , GPIO_1[22]~output, DE1_SoC, 1
instance = comp, \GPIO_1[23]~output , GPIO_1[23]~output, DE1_SoC, 1
instance = comp, \GPIO_1[24]~output , GPIO_1[24]~output, DE1_SoC, 1
instance = comp, \GPIO_1[25]~output , GPIO_1[25]~output, DE1_SoC, 1
instance = comp, \GPIO_1[26]~output , GPIO_1[26]~output, DE1_SoC, 1
instance = comp, \GPIO_1[27]~output , GPIO_1[27]~output, DE1_SoC, 1
instance = comp, \GPIO_1[28]~output , GPIO_1[28]~output, DE1_SoC, 1
instance = comp, \GPIO_1[29]~output , GPIO_1[29]~output, DE1_SoC, 1
instance = comp, \GPIO_1[30]~output , GPIO_1[30]~output, DE1_SoC, 1
instance = comp, \GPIO_1[31]~output , GPIO_1[31]~output, DE1_SoC, 1
instance = comp, \GPIO_1[32]~output , GPIO_1[32]~output, DE1_SoC, 1
instance = comp, \GPIO_1[33]~output , GPIO_1[33]~output, DE1_SoC, 1
instance = comp, \GPIO_1[34]~output , GPIO_1[34]~output, DE1_SoC, 1
instance = comp, \GPIO_1[35]~output , GPIO_1[35]~output, DE1_SoC, 1
instance = comp, \HEX0[0]~output , HEX0[0]~output, DE1_SoC, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, DE1_SoC, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, DE1_SoC, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, DE1_SoC, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, DE1_SoC, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, DE1_SoC, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, DE1_SoC, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, DE1_SoC, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, DE1_SoC, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, DE1_SoC, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, DE1_SoC, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, DE1_SoC, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, DE1_SoC, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, DE1_SoC, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, DE1_SoC, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, DE1_SoC, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, DE1_SoC, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, DE1_SoC, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, DE1_SoC, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, DE1_SoC, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, DE1_SoC, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, DE1_SoC, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, DE1_SoC, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, DE1_SoC, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, DE1_SoC, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, DE1_SoC, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, DE1_SoC, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, DE1_SoC, 1
instance = comp, \HEX4[0]~output , HEX4[0]~output, DE1_SoC, 1
instance = comp, \HEX4[1]~output , HEX4[1]~output, DE1_SoC, 1
instance = comp, \HEX4[2]~output , HEX4[2]~output, DE1_SoC, 1
instance = comp, \HEX4[3]~output , HEX4[3]~output, DE1_SoC, 1
instance = comp, \HEX4[4]~output , HEX4[4]~output, DE1_SoC, 1
instance = comp, \HEX4[5]~output , HEX4[5]~output, DE1_SoC, 1
instance = comp, \HEX4[6]~output , HEX4[6]~output, DE1_SoC, 1
instance = comp, \HEX5[0]~output , HEX5[0]~output, DE1_SoC, 1
instance = comp, \HEX5[1]~output , HEX5[1]~output, DE1_SoC, 1
instance = comp, \HEX5[2]~output , HEX5[2]~output, DE1_SoC, 1
instance = comp, \HEX5[3]~output , HEX5[3]~output, DE1_SoC, 1
instance = comp, \HEX5[4]~output , HEX5[4]~output, DE1_SoC, 1
instance = comp, \HEX5[5]~output , HEX5[5]~output, DE1_SoC, 1
instance = comp, \HEX5[6]~output , HEX5[6]~output, DE1_SoC, 1
instance = comp, \LEDR[0]~output , LEDR[0]~output, DE1_SoC, 1
instance = comp, \LEDR[1]~output , LEDR[1]~output, DE1_SoC, 1
instance = comp, \LEDR[2]~output , LEDR[2]~output, DE1_SoC, 1
instance = comp, \LEDR[3]~output , LEDR[3]~output, DE1_SoC, 1
instance = comp, \LEDR[4]~output , LEDR[4]~output, DE1_SoC, 1
instance = comp, \LEDR[5]~output , LEDR[5]~output, DE1_SoC, 1
instance = comp, \LEDR[6]~output , LEDR[6]~output, DE1_SoC, 1
instance = comp, \LEDR[7]~output , LEDR[7]~output, DE1_SoC, 1
instance = comp, \LEDR[8]~output , LEDR[8]~output, DE1_SoC, 1
instance = comp, \LEDR[9]~output , LEDR[9]~output, DE1_SoC, 1
instance = comp, \CLOCK_50~input , CLOCK_50~input, DE1_SoC, 1
instance = comp, \CLOCK_50~inputCLKENA0 , CLOCK_50~inputCLKENA0, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[0]~0 , cdiv|divided_clocks[0]~0, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[0] , cdiv|divided_clocks[0], DE1_SoC, 1
instance = comp, \cdiv|Add0~57 , cdiv|Add0~57, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[1] , cdiv|divided_clocks[1], DE1_SoC, 1
instance = comp, \cdiv|Add0~53 , cdiv|Add0~53, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[2] , cdiv|divided_clocks[2], DE1_SoC, 1
instance = comp, \cdiv|Add0~49 , cdiv|Add0~49, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[3] , cdiv|divided_clocks[3], DE1_SoC, 1
instance = comp, \cdiv|Add0~45 , cdiv|Add0~45, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[4] , cdiv|divided_clocks[4], DE1_SoC, 1
instance = comp, \cdiv|Add0~41 , cdiv|Add0~41, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[5] , cdiv|divided_clocks[5], DE1_SoC, 1
instance = comp, \cdiv|Add0~37 , cdiv|Add0~37, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[6] , cdiv|divided_clocks[6], DE1_SoC, 1
instance = comp, \cdiv|Add0~33 , cdiv|Add0~33, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[7] , cdiv|divided_clocks[7], DE1_SoC, 1
instance = comp, \cdiv|Add0~29 , cdiv|Add0~29, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[8] , cdiv|divided_clocks[8], DE1_SoC, 1
instance = comp, \cdiv|Add0~25 , cdiv|Add0~25, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[9] , cdiv|divided_clocks[9], DE1_SoC, 1
instance = comp, \cdiv|Add0~21 , cdiv|Add0~21, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[10] , cdiv|divided_clocks[10], DE1_SoC, 1
instance = comp, \cdiv|Add0~17 , cdiv|Add0~17, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[11] , cdiv|divided_clocks[11], DE1_SoC, 1
instance = comp, \cdiv|Add0~13 , cdiv|Add0~13, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[12] , cdiv|divided_clocks[12], DE1_SoC, 1
instance = comp, \cdiv|Add0~9 , cdiv|Add0~9, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[13] , cdiv|divided_clocks[13], DE1_SoC, 1
instance = comp, \cdiv|Add0~5 , cdiv|Add0~5, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[14] , cdiv|divided_clocks[14], DE1_SoC, 1
instance = comp, \cdiv|Add0~1 , cdiv|Add0~1, DE1_SoC, 1
instance = comp, \cdiv|divided_clocks[15] , cdiv|divided_clocks[15], DE1_SoC, 1
instance = comp, \SW[2]~input , SW[2]~input, DE1_SoC, 1
instance = comp, \SW[9]~input , SW[9]~input, DE1_SoC, 1
instance = comp, \i3|rightKey|prevValue , i3|rightKey|prevValue, DE1_SoC, 1
instance = comp, \i3|rightKey|next~0 , i3|rightKey|next~0, DE1_SoC, 1
instance = comp, \i3|rightKey|out , i3|rightKey|out, DE1_SoC, 1
instance = comp, \SW[1]~input , SW[1]~input, DE1_SoC, 1
instance = comp, \i4|leftKey|prevValue , i4|leftKey|prevValue, DE1_SoC, 1
instance = comp, \i4|leftKey|next~0 , i4|leftKey|next~0, DE1_SoC, 1
instance = comp, \i4|leftKey|out , i4|leftKey|out, DE1_SoC, 1
instance = comp, \SW[6]~input , SW[6]~input, DE1_SoC, 1
instance = comp, \i2|leftKey|prevValue , i2|leftKey|prevValue, DE1_SoC, 1
instance = comp, \i2|leftKey|next~0 , i2|leftKey|next~0, DE1_SoC, 1
instance = comp, \i2|leftKey|out , i2|leftKey|out, DE1_SoC, 1
instance = comp, \SW[5]~input , SW[5]~input, DE1_SoC, 1
instance = comp, \i2|rightKey|prevValue , i2|rightKey|prevValue, DE1_SoC, 1
instance = comp, \i2|rightKey|next~0 , i2|rightKey|next~0, DE1_SoC, 1
instance = comp, \i2|rightKey|out , i2|rightKey|out, DE1_SoC, 1
instance = comp, \test|RedPixels~11 , test|RedPixels~11, DE1_SoC, 1
instance = comp, \comb~0 , comb~0, DE1_SoC, 1
instance = comp, \test|GrnPixels~25 , test|GrnPixels~25, DE1_SoC, 1
instance = comp, \test|GrnPixels[6][4] , test|GrnPixels[6][4], DE1_SoC, 1
instance = comp, \test|RedPixels~18 , test|RedPixels~18, DE1_SoC, 1
instance = comp, \test|RedPixels~19 , test|RedPixels~19, DE1_SoC, 1
instance = comp, \test|RedPixels[3][4] , test|RedPixels[3][4], DE1_SoC, 1
instance = comp, \test|RedPixels~23 , test|RedPixels~23, DE1_SoC, 1
instance = comp, \test|GrnPixels~31 , test|GrnPixels~31, DE1_SoC, 1
instance = comp, \test|GrnPixels~32 , test|GrnPixels~32, DE1_SoC, 1
instance = comp, \test|GrnPixels[12][4] , test|GrnPixels[12][4], DE1_SoC, 1
instance = comp, \test|RedPixels~31 , test|RedPixels~31, DE1_SoC, 1
instance = comp, \test|RedPixels[12][4] , test|RedPixels[12][4], DE1_SoC, 1
instance = comp, \test|RedPixels~25 , test|RedPixels~25, DE1_SoC, 1
instance = comp, \test|RedPixels[11][4] , test|RedPixels[11][4], DE1_SoC, 1
instance = comp, \test|RedPixels~24 , test|RedPixels~24, DE1_SoC, 1
instance = comp, \test|RedPixels[6][4] , test|RedPixels[6][4], DE1_SoC, 1
instance = comp, \test|always0~1 , test|always0~1, DE1_SoC, 1
instance = comp, \test|always0~11 , test|always0~11, DE1_SoC, 1
instance = comp, \SW[0]~input , SW[0]~input, DE1_SoC, 1
instance = comp, \i4|rightKey|prevValue , i4|rightKey|prevValue, DE1_SoC, 1
instance = comp, \i4|rightKey|next~0 , i4|rightKey|next~0, DE1_SoC, 1
instance = comp, \i4|rightKey|out , i4|rightKey|out, DE1_SoC, 1
instance = comp, \test|GrnPixels~10 , test|GrnPixels~10, DE1_SoC, 1
instance = comp, \test|GrnPixels~24 , test|GrnPixels~24, DE1_SoC, 1
instance = comp, \test|GrnPixels~33 , test|GrnPixels~33, DE1_SoC, 1
instance = comp, \test|GrnPixels~34 , test|GrnPixels~34, DE1_SoC, 1
instance = comp, \test|GrnPixels[11][4] , test|GrnPixels[11][4], DE1_SoC, 1
instance = comp, \test|always0~7 , test|always0~7, DE1_SoC, 1
instance = comp, \test|GrnPixels~16 , test|GrnPixels~16, DE1_SoC, 1
instance = comp, \test|GrnPixels[3][4] , test|GrnPixels[3][4], DE1_SoC, 1
instance = comp, \test|RedPixels~4 , test|RedPixels~4, DE1_SoC, 1
instance = comp, \test|RedPixels~5 , test|RedPixels~5, DE1_SoC, 1
instance = comp, \test|RedPixels[0][4] , test|RedPixels[0][4], DE1_SoC, 1
instance = comp, \winner|always2~2 , winner|always2~2, DE1_SoC, 1
instance = comp, \test|RedPixels~0 , test|RedPixels~0, DE1_SoC, 1
instance = comp, \test|RedPixels~16 , test|RedPixels~16, DE1_SoC, 1
instance = comp, \test|RedPixels[6][7] , test|RedPixels[6][7], DE1_SoC, 1
instance = comp, \SW[7]~input , SW[7]~input, DE1_SoC, 1
instance = comp, \i1|rightKey|prevValue , i1|rightKey|prevValue, DE1_SoC, 1
instance = comp, \i1|rightKey|next~0 , i1|rightKey|next~0, DE1_SoC, 1
instance = comp, \i1|rightKey|out , i1|rightKey|out, DE1_SoC, 1
instance = comp, \test|always0~6 , test|always0~6, DE1_SoC, 1
instance = comp, \test|RedPixels~17 , test|RedPixels~17, DE1_SoC, 1
instance = comp, \test|RedPixels[3][7] , test|RedPixels[3][7], DE1_SoC, 1
instance = comp, \test|RedPixels~15 , test|RedPixels~15, DE1_SoC, 1
instance = comp, \test|RedPixels~22 , test|RedPixels~22, DE1_SoC, 1
instance = comp, \test|RedPixels[11][7] , test|RedPixels[11][7], DE1_SoC, 1
instance = comp, \test|GrnPixels~40 , test|GrnPixels~40, DE1_SoC, 1
instance = comp, \test|GrnPixels~21 , test|GrnPixels~21, DE1_SoC, 1
instance = comp, \test|GrnPixels~41 , test|GrnPixels~41, DE1_SoC, 1
instance = comp, \test|GrnPixels[12][7] , test|GrnPixels[12][7], DE1_SoC, 1
instance = comp, \test|GrnPixels~38 , test|GrnPixels~38, DE1_SoC, 1
instance = comp, \test|GrnPixels~39 , test|GrnPixels~39, DE1_SoC, 1
instance = comp, \test|GrnPixels[11][7] , test|GrnPixels[11][7], DE1_SoC, 1
instance = comp, \test|always0~4 , test|always0~4, DE1_SoC, 1
instance = comp, \test|always0~5 , test|always0~5, DE1_SoC, 1
instance = comp, \test|GrnPixels~22 , test|GrnPixels~22, DE1_SoC, 1
instance = comp, \test|GrnPixels~23 , test|GrnPixels~23, DE1_SoC, 1
instance = comp, \test|GrnPixels[6][7] , test|GrnPixels[6][7], DE1_SoC, 1
instance = comp, \test|GrnPixels~13 , test|GrnPixels~13, DE1_SoC, 1
instance = comp, \test|always0~0 , test|always0~0, DE1_SoC, 1
instance = comp, \test|GrnPixels~14 , test|GrnPixels~14, DE1_SoC, 1
instance = comp, \test|GrnPixels~15 , test|GrnPixels~15, DE1_SoC, 1
instance = comp, \test|GrnPixels[3][7] , test|GrnPixels[3][7], DE1_SoC, 1
instance = comp, \test|RedPixels~10 , test|RedPixels~10, DE1_SoC, 1
instance = comp, \test|RedPixels~32 , test|RedPixels~32, DE1_SoC, 1
instance = comp, \test|RedPixels[12][7] , test|RedPixels[12][7], DE1_SoC, 1
instance = comp, \test|RedPixels~3 , test|RedPixels~3, DE1_SoC, 1
instance = comp, \test|RedPixels[0][7] , test|RedPixels[0][7], DE1_SoC, 1
instance = comp, \winner|ns~14 , winner|ns~14, DE1_SoC, 1
instance = comp, \test|always0~2 , test|always0~2, DE1_SoC, 1
instance = comp, \test|GrnPixels~17 , test|GrnPixels~17, DE1_SoC, 1
instance = comp, \test|RedPixels~21 , test|RedPixels~21, DE1_SoC, 1
instance = comp, \test|GrnPixels~18 , test|GrnPixels~18, DE1_SoC, 1
instance = comp, \test|GrnPixels[3][1] , test|GrnPixels[3][1], DE1_SoC, 1
instance = comp, \test|GrnPixels~29 , test|GrnPixels~29, DE1_SoC, 1
instance = comp, \test|RedPixels[12][1]~feeder , test|RedPixels[12][1]~feeder, DE1_SoC, 1
instance = comp, \test|RedPixels[12][1] , test|RedPixels[12][1], DE1_SoC, 1
instance = comp, \test|RedPixels~28 , test|RedPixels~28, DE1_SoC, 1
instance = comp, \test|GrnPixels~35 , test|GrnPixels~35, DE1_SoC, 1
instance = comp, \test|always0~13 , test|always0~13, DE1_SoC, 1
instance = comp, \test|GrnPixels~36 , test|GrnPixels~36, DE1_SoC, 1
instance = comp, \test|GrnPixels[11][1] , test|GrnPixels[11][1], DE1_SoC, 1
instance = comp, \test|GrnPixels~28 , test|GrnPixels~28, DE1_SoC, 1
instance = comp, \test|GrnPixels~30 , test|GrnPixels~30, DE1_SoC, 1
instance = comp, \test|GrnPixels[12][1] , test|GrnPixels[12][1], DE1_SoC, 1
instance = comp, \test|always0~12 , test|always0~12, DE1_SoC, 1
instance = comp, \test|GrnPixels~26 , test|GrnPixels~26, DE1_SoC, 1
instance = comp, \test|GrnPixels~27 , test|GrnPixels~27, DE1_SoC, 1
instance = comp, \test|GrnPixels[6][1] , test|GrnPixels[6][1], DE1_SoC, 1
instance = comp, \test|RedPixels~26 , test|RedPixels~26, DE1_SoC, 1
instance = comp, \test|RedPixels~33 , test|RedPixels~33, DE1_SoC, 1
instance = comp, \test|RedPixels[11][1]~feeder , test|RedPixels[11][1]~feeder, DE1_SoC, 1
instance = comp, \test|RedPixels[11][1] , test|RedPixels[11][1], DE1_SoC, 1
instance = comp, \test|always0~8 , test|always0~8, DE1_SoC, 1
instance = comp, \test|RedPixels~27 , test|RedPixels~27, DE1_SoC, 1
instance = comp, \test|RedPixels[6][1] , test|RedPixels[6][1], DE1_SoC, 1
instance = comp, \test|RedPixels~12 , test|RedPixels~12, DE1_SoC, 1
instance = comp, \test|RedPixels~20 , test|RedPixels~20, DE1_SoC, 1
instance = comp, \test|RedPixels[3][1]~feeder , test|RedPixels[3][1]~feeder, DE1_SoC, 1
instance = comp, \test|RedPixels[3][1] , test|RedPixels[3][1], DE1_SoC, 1
instance = comp, \test|RedPixels~6 , test|RedPixels~6, DE1_SoC, 1
instance = comp, \test|RedPixels~7 , test|RedPixels~7, DE1_SoC, 1
instance = comp, \test|RedPixels[0][1] , test|RedPixels[0][1], DE1_SoC, 1
instance = comp, \winner|always2~4 , winner|always2~4, DE1_SoC, 1
instance = comp, \test|always0~3 , test|always0~3, DE1_SoC, 1
instance = comp, \SW[8]~input , SW[8]~input, DE1_SoC, 1
instance = comp, \i1|leftKey|prevValue , i1|leftKey|prevValue, DE1_SoC, 1
instance = comp, \i1|leftKey|next~0 , i1|leftKey|next~0, DE1_SoC, 1
instance = comp, \i1|leftKey|out , i1|leftKey|out, DE1_SoC, 1
instance = comp, \test|RedPixels~8 , test|RedPixels~8, DE1_SoC, 1
instance = comp, \test|GrnPixels~12 , test|GrnPixels~12, DE1_SoC, 1
instance = comp, \test|GrnPixels[3][10] , test|GrnPixels[3][10], DE1_SoC, 1
instance = comp, \test|GrnPixels~19 , test|GrnPixels~19, DE1_SoC, 1
instance = comp, \test|RedPixels~29 , test|RedPixels~29, DE1_SoC, 1
instance = comp, \test|RedPixels[12][10] , test|RedPixels[12][10], DE1_SoC, 1
instance = comp, \test|always0~9 , test|always0~9, DE1_SoC, 1
instance = comp, \test|always0~10 , test|always0~10, DE1_SoC, 1
instance = comp, \test|GrnPixels~37 , test|GrnPixels~37, DE1_SoC, 1
instance = comp, \test|GrnPixels[12][10] , test|GrnPixels[12][10], DE1_SoC, 1
instance = comp, \test|always0~14 , test|always0~14, DE1_SoC, 1
instance = comp, \test|GrnPixels~42 , test|GrnPixels~42, DE1_SoC, 1
instance = comp, \test|GrnPixels[11][10] , test|GrnPixels[11][10], DE1_SoC, 1
instance = comp, \test|RedPixels~30 , test|RedPixels~30, DE1_SoC, 1
instance = comp, \test|RedPixels[11][10] , test|RedPixels[11][10], DE1_SoC, 1
instance = comp, \winner|ns~12 , winner|ns~12, DE1_SoC, 1
instance = comp, \winner|always2~3 , winner|always2~3, DE1_SoC, 1
instance = comp, \winner|ns~13 , winner|ns~13, DE1_SoC, 1
instance = comp, \winner|ns~15 , winner|ns~15, DE1_SoC, 1
instance = comp, \test|GrnPixels~3 , test|GrnPixels~3, DE1_SoC, 1
instance = comp, \test|GrnPixels~4 , test|GrnPixels~4, DE1_SoC, 1
instance = comp, \test|GrnPixels~2 , test|GrnPixels~2, DE1_SoC, 1
instance = comp, \test|GrnPixels~5 , test|GrnPixels~5, DE1_SoC, 1
instance = comp, \test|GrnPixels[0][7] , test|GrnPixels[0][7], DE1_SoC, 1
instance = comp, \winner|ns~3 , winner|ns~3, DE1_SoC, 1
instance = comp, \test|GrnPixels~9 , test|GrnPixels~9, DE1_SoC, 1
instance = comp, \test|GrnPixels~11 , test|GrnPixels~11, DE1_SoC, 1
instance = comp, \test|GrnPixels[0][1] , test|GrnPixels[0][1], DE1_SoC, 1
instance = comp, \winner|ns~4 , winner|ns~4, DE1_SoC, 1
instance = comp, \winner|ns~5 , winner|ns~5, DE1_SoC, 1
instance = comp, \winner|ns~1 , winner|ns~1, DE1_SoC, 1
instance = comp, \winner|ns~0 , winner|ns~0, DE1_SoC, 1
instance = comp, \winner|ns~2 , winner|ns~2, DE1_SoC, 1
instance = comp, \test|GrnPixels~1 , test|GrnPixels~1, DE1_SoC, 1
instance = comp, \test|GrnPixels[0][10] , test|GrnPixels[0][10], DE1_SoC, 1
instance = comp, \winner|ns~7 , winner|ns~7, DE1_SoC, 1
instance = comp, \winner|always2~0 , winner|always2~0, DE1_SoC, 1
instance = comp, \winner|ns~8 , winner|ns~8, DE1_SoC, 1
instance = comp, \test|GrnPixels~7 , test|GrnPixels~7, DE1_SoC, 1
instance = comp, \test|GrnPixels~6 , test|GrnPixels~6, DE1_SoC, 1
instance = comp, \test|GrnPixels~8 , test|GrnPixels~8, DE1_SoC, 1
instance = comp, \test|GrnPixels[0][4] , test|GrnPixels[0][4], DE1_SoC, 1
instance = comp, \winner|ns~6 , winner|ns~6, DE1_SoC, 1
instance = comp, \winner|ns~9 , winner|ns~9, DE1_SoC, 1
instance = comp, \winner|ns~10 , winner|ns~10, DE1_SoC, 1
instance = comp, \winner|always2~1 , winner|always2~1, DE1_SoC, 1
instance = comp, \winner|ns~11 , winner|ns~11, DE1_SoC, 1
instance = comp, \winner|always2~7 , winner|always2~7, DE1_SoC, 1
instance = comp, \winner|always2~6 , winner|always2~6, DE1_SoC, 1
instance = comp, \winner|always2~9 , winner|always2~9, DE1_SoC, 1
instance = comp, \winner|always2~10 , winner|always2~10, DE1_SoC, 1
instance = comp, \winner|always2~5 , winner|always2~5, DE1_SoC, 1
instance = comp, \winner|always2~8 , winner|always2~8, DE1_SoC, 1
instance = comp, \winner|ns~16 , winner|ns~16, DE1_SoC, 1
instance = comp, \winner|ps~5 , winner|ps~5, DE1_SoC, 1
instance = comp, \winner|ps~2 , winner|ps~2, DE1_SoC, 1
instance = comp, \winner|ps~6 , winner|ps~6, DE1_SoC, 1
instance = comp, \winner|ps~3 , winner|ps~3, DE1_SoC, 1
instance = comp, \winner|ps~4 , winner|ps~4, DE1_SoC, 1
instance = comp, \winner|oneWin~0 , winner|oneWin~0, DE1_SoC, 1
instance = comp, \winner|oneWin , winner|oneWin, DE1_SoC, 1
instance = comp, \SW[3]~input , SW[3]~input, DE1_SoC, 1
instance = comp, \i3|leftKey|prevValue , i3|leftKey|prevValue, DE1_SoC, 1
instance = comp, \i3|leftKey|next~0 , i3|leftKey|next~0, DE1_SoC, 1
instance = comp, \i3|leftKey|out , i3|leftKey|out, DE1_SoC, 1
instance = comp, \test|GrnPixels~0 , test|GrnPixels~0, DE1_SoC, 1
instance = comp, \test|GrnPixels~20 , test|GrnPixels~20, DE1_SoC, 1
instance = comp, \test|GrnPixels[6][10] , test|GrnPixels[6][10], DE1_SoC, 1
instance = comp, \test|RedPixels~13 , test|RedPixels~13, DE1_SoC, 1
instance = comp, \test|RedPixels~14 , test|RedPixels~14, DE1_SoC, 1
instance = comp, \test|RedPixels[6][10] , test|RedPixels[6][10], DE1_SoC, 1
instance = comp, \test|RedPixels~9 , test|RedPixels~9, DE1_SoC, 1
instance = comp, \test|RedPixels[3][10] , test|RedPixels[3][10], DE1_SoC, 1
instance = comp, \test|RedPixels~1 , test|RedPixels~1, DE1_SoC, 1
instance = comp, \test|RedPixels~2 , test|RedPixels~2, DE1_SoC, 1
instance = comp, \test|RedPixels[0][10] , test|RedPixels[0][10], DE1_SoC, 1
instance = comp, \winner|ns~17 , winner|ns~17, DE1_SoC, 1
instance = comp, \winner|counterGreen[0]~1 , winner|counterGreen[0]~1, DE1_SoC, 1
instance = comp, \winner|counterGreen[0] , winner|counterGreen[0], DE1_SoC, 1
instance = comp, \winner|outputGreen[1]~7 , winner|outputGreen[1]~7, DE1_SoC, 1
instance = comp, \winner|counterGreen[0]~0 , winner|counterGreen[0]~0, DE1_SoC, 1
instance = comp, \winner|counterGreen[1] , winner|counterGreen[1], DE1_SoC, 1
instance = comp, \winner|Add1~0 , winner|Add1~0, DE1_SoC, 1
instance = comp, \winner|counterGreen[2] , winner|counterGreen[2], DE1_SoC, 1
instance = comp, \winner|outputGreen[0]~0 , winner|outputGreen[0]~0, DE1_SoC, 1
instance = comp, \winner|outputGreen[1]~1 , winner|outputGreen[1]~1, DE1_SoC, 1
instance = comp, \winner|outputGreen[2]~2 , winner|outputGreen[2]~2, DE1_SoC, 1
instance = comp, \winner|outputGreen[3]~3 , winner|outputGreen[3]~3, DE1_SoC, 1
instance = comp, \winner|outputGreen[4]~4 , winner|outputGreen[4]~4, DE1_SoC, 1
instance = comp, \winner|outputGreen[5]~5 , winner|outputGreen[5]~5, DE1_SoC, 1
instance = comp, \winner|outputGreen[6]~6 , winner|outputGreen[6]~6, DE1_SoC, 1
instance = comp, \winner|counterRed[0]~1 , winner|counterRed[0]~1, DE1_SoC, 1
instance = comp, \winner|counterRed[0]~2 , winner|counterRed[0]~2, DE1_SoC, 1
instance = comp, \winner|counterRed[0] , winner|counterRed[0], DE1_SoC, 1
instance = comp, \winner|outputRed[1]~7 , winner|outputRed[1]~7, DE1_SoC, 1
instance = comp, \winner|counterRed[0]~0 , winner|counterRed[0]~0, DE1_SoC, 1
instance = comp, \winner|counterRed[1] , winner|counterRed[1], DE1_SoC, 1
instance = comp, \winner|Add0~0 , winner|Add0~0, DE1_SoC, 1
instance = comp, \winner|counterRed[2] , winner|counterRed[2], DE1_SoC, 1
instance = comp, \winner|outputRed[0]~0 , winner|outputRed[0]~0, DE1_SoC, 1
instance = comp, \winner|outputRed[1]~1 , winner|outputRed[1]~1, DE1_SoC, 1
instance = comp, \winner|outputRed[2]~2 , winner|outputRed[2]~2, DE1_SoC, 1
instance = comp, \winner|outputRed[3]~3 , winner|outputRed[3]~3, DE1_SoC, 1
instance = comp, \winner|outputRed[4]~4 , winner|outputRed[4]~4, DE1_SoC, 1
instance = comp, \winner|outputRed[5]~5 , winner|outputRed[5]~5, DE1_SoC, 1
instance = comp, \winner|outputRed[6]~6 , winner|outputRed[6]~6, DE1_SoC, 1
instance = comp, \KEY[0]~input , KEY[0]~input, DE1_SoC, 1
instance = comp, \KEY[1]~input , KEY[1]~input, DE1_SoC, 1
instance = comp, \KEY[2]~input , KEY[2]~input, DE1_SoC, 1
instance = comp, \KEY[3]~input , KEY[3]~input, DE1_SoC, 1
instance = comp, \SW[4]~input , SW[4]~input, DE1_SoC, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, DE1_SoC, 1
